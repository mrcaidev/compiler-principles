export enum TokenType {
  BEGIN = 1,
  END,
  INTEGER,
  IF,
  THEN,
  ELSE,
  FUNCTION,
  READ,
  WRITE,
  IDENTIFIER,
  CONSTANT,
  EQUAL,
  NOT_EQUAL,
  LESS_THAN_OR_EQUAL,
  LESS_THAN,
  GREATER_THAN_OR_EQUAL,
  GREATER_THAN,
  SUBTRACT,
  MULTIPLY,
  ASSIGN,
  LEFT_PARENTHESES,
  RIGHT_PARENTHESES,
  SEMICOLON,
  END_OF_LINE,
  END_OF_FILE,
}

export type Token = {
  type: TokenType;
  value: string;
};

export const tokenTranslation = {
  [TokenType.BEGIN]: "'begin'",
  [TokenType.END]: "'end'",
  [TokenType.INTEGER]: "'integer'",
  [TokenType.IF]: "'if'",
  [TokenType.THEN]: "'then'",
  [TokenType.ELSE]: "'else'",
  [TokenType.FUNCTION]: "'function'",
  [TokenType.READ]: "'read'",
  [TokenType.WRITE]: "'write'",
  [TokenType.IDENTIFIER]: "identifier",
  [TokenType.CONSTANT]: "constant",
  [TokenType.EQUAL]: "'='",
  [TokenType.NOT_EQUAL]: "'<>'",
  [TokenType.LESS_THAN_OR_EQUAL]: "'<='",
  [TokenType.LESS_THAN]: "'<'",
  [TokenType.GREATER_THAN_OR_EQUAL]: "'>='",
  [TokenType.GREATER_THAN]: "'>'",
  [TokenType.SUBTRACT]: "'-'",
  [TokenType.MULTIPLY]: "'*'",
  [TokenType.ASSIGN]: "':='",
  [TokenType.LEFT_PARENTHESES]: "'('",
  [TokenType.RIGHT_PARENTHESES]: "')'",
  [TokenType.SEMICOLON]: "';'",
  [TokenType.END_OF_LINE]: "EOLN",
  [TokenType.END_OF_FILE]: "EOF",
};
